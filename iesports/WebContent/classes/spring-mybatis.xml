<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
   	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd    
    http://www.springframework.org/schema/context    
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/tx    
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd   
    http://www.springframework.org/schema/mvc    
    http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
	<import resource="classpath:applicationContext.xml"/>
	<!-- 1.自动扫描 -->
	<context:component-scan base-package="com.iesports" />
	<!-- 2.引入数据源配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	<!-- 3.定义数据源连接池此处改用c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${datasource.driver}" />
		<property name="jdbcUrl" value="${datasource.url}" />
		<property name="user" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<!-- 初始连接池大小 -->
		<property name="initialPoolSize" value="${datasource.initialPoolSize}"/>
		<!-- 最小连接池大小 -->
		<property name="minPoolSize" value="${datasource.minPoolSize}"/>
		<!-- 最大连接池大小 -->
		<property name="maxPoolSize" value="${datasource.maxPoolSize}"/>
		<!-- 连接超时时间 -->
		<property name="checkoutTimeout" value="${datasource.checkoutTimeout}"/>
		<!-- 最大状态说明 -->
		<property name="maxStatements" value="${datasource.maxStatements}"/>
		<!-- 闲置连接测试周期 -->
		<property name="idleConnectionTestPeriod" value="${datasource.idleConnectionTestPeriod}"/>
		<!-- 获得增量值 -->
		<property name="acquireIncrement" value="${datasource.acquireIncrement}"/>
	</bean>
	
	<!-- 4.spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引用数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapper.xml文件 -->
		<property name="mapperLocations" value="classpath:com/iesports/dao/mapper/*.xml"/>
		<!-- 引入类型别名包，则自动扫描该包下的实体bean,别名自动将简单类名设为该类名 -->
		<property name="typeAliasesPackage" value="com.iesports.dao.bean"/>
	</bean>

	<!-- 5.DAO接口所在包名，Spring会自动查找其下的配置文件类
		mybatis自动扫描加载Sql映射文件/接口：MapperScannerConfiger
		basePackage : 指定Sql 映射文件/接口所在的包（自动扫描）
		如需扫描多个包，中间使用半角逗号隔开
	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.iesports.dao.mapper" />
		<!-- 引用上文中定义的sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 6.(事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 引用上文中定义的数据源 -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 7.声明式事务管理 -->
	<tx:annotation-driven/>
</beans>  